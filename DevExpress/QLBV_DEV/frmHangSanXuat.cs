using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using System.Data.Entity;
using QLBV_DEV.Repository;

using System.Data.Entity.Validation;
using System.Diagnostics;

using DevExpress.XtraGrid.Views.Grid;


namespace QLBV_DEV
{
    public partial class frmHangSanXuat : DevExpress.XtraEditors.XtraForm
    {
        #region params
        int HangSanXuat_Id = 0;
        HangSanXuatRepository repository = new HangSanXuatRepository();
        HospitalEntities db = new HospitalEntities();
        bool isUpdate = false;
        #endregion

        public frmHangSanXuat()
        {
            InitializeComponent();
            LoadDS_HangSanXuat();
        }
        
        private void btnThem_Click(object sender, EventArgs e)
        {
            //frmThemNuocSanXuat frmThemNuocSanXuat = new frmThemNuocSanXuat();
            //frmThemNuocSanXuat.ShowInTaskbar = false;
            //frmThemNuocSanXuat.FormClosed += new FormClosedEventHandler(close_form);
            //frmThemNuocSanXuat.ShowDialog();
        }
        private void LoadDS_HangSanXuat()
        {
            QLBV_DEV.HospitalEntities dbContext = new QLBV_DEV.HospitalEntities();
            // Call the Load method to get the data for the given DbSet from the database.
            dbContext.HangSanXuat.Load();
            // This line of code is generated by Data Source Configuration Wizard
            gridcontrolHangSanXuat.DataSource = dbContext.HangSanXuat.Local.ToBindingList();
        }
        private void close_form(object sender, FormClosedEventArgs e)
        {
            LoadDS_HangSanXuat();
        }

        private void Xoatrang()
        {
            txtDiaChi.Text = "";
            txtTenHangSanXuat.Text = "";
            txtSDT.Text = ""; 
        }

        private void btnXoa_Click(object sender, EventArgs e)
        {
            if (HangSanXuat_Id > 0)
            {
                String ten = grvHangSanXuat.GetRowCellValue(grvHangSanXuat.FocusedRowHandle, "TenHangSX").ToString();
                DialogResult dialogResult = MessageBox.Show(ten, "Xác nhận xóa?", MessageBoxButtons.YesNo);
                if (dialogResult == DialogResult.Yes)
                {
                    repository.Delete(HangSanXuat_Id);                  


                    // Tải lại danh sách nước sản xuất
                    LoadDS_HangSanXuat();
                    Xoatrang();
                }
                else if (dialogResult == DialogResult.No)
                {
                    //do something else
                }                               
            }
        }


        private void btnLuu_Click(object sender, EventArgs e)
        {
            #region Code Save cũ
            //if (dxValidate.Validate())
            //{
            //    NuocSanXuat _object = new NuocSanXuat()
            //    {
            //        TenNuoc = txtTenNuoc.Text.Trim()
            //    };

            //    try
            //    {
            //        if (isUpdate && nuocsanxuat_Id > 0)
            //        {
            //            NuocSanXuat objNuocSanXuat = db.NuocSanXuat.Where(p => p.ID == nuocsanxuat_Id).SingleOrDefault();
            //            objNuocSanXuat.TenNuoc = txtTenNuoc.Text.Trim();

            //            db.SaveChanges();
            //            // Tải lại danh sách nước sản xuất

            //        }
            //        else
            //        {
            //            repository.Create(_object);

            //            txtTenNuoc.Text = "";
            //            MessageBox.Show("Lưu thành công");
            //        }
            //        LoadDS_NuocSanXuat();

            //    }
            //    catch (DbEntityValidationException dbEx)
            //    {
            //        foreach (var validationErrors in dbEx.EntityValidationErrors)
            //        {
            //            foreach (var validationError in validationErrors.ValidationErrors)
            //            {
            //                Trace.TraceInformation(
            //                      "Class: {0}, Property: {1}, Error: {2}",
            //                      validationErrors.Entry.Entity.GetType().FullName,
            //                      validationError.PropertyName,
            //                      validationError.ErrorMessage);
            //            }
            //        }
            //    }
            //}
            //else
            //{
            //    MessageBox.Show("Lỗi");
            //}
            #endregion

            HangSanXuat obj_HangSanXuat;
            try
            {
                if (isUpdate && HangSanXuat_Id > 0)
                {
                    obj_HangSanXuat = db.HangSanXuat.Where(p => p.ID == HangSanXuat_Id).SingleOrDefault();
                }
                else
                {
                    obj_HangSanXuat = new HangSanXuat();
                }
                obj_HangSanXuat.TenHangSX = txtTenHangSanXuat.Text.Trim();
                obj_HangSanXuat.DiaChi    = txtDiaChi.Text.Trim();
                obj_HangSanXuat.SDT       = txtSDT.Text.Trim();
                obj_HangSanXuat.KichHoat = true;     //Viết lại dòng này
                if (isUpdate && HangSanXuat_Id > 0) // Cập nhật
                {
                    //respository.Save(objNuocSanXuat);
                    db.SaveChanges();

                }
                else // Thêm mới
                {
                    repository.Create(obj_HangSanXuat);
                    //db.NCC_KH.Add(_object);
                    //db.SaveChanges(); 
                    Xoatrang();
                }
                LoadDS_HangSanXuat();
            }
            catch (DbEntityValidationException dbEx)
            {
                foreach (var validationErrors in dbEx.EntityValidationErrors)
                {
                    foreach (var validationError in validationErrors.ValidationErrors)
                    {
                        Trace.TraceInformation(
                              "Class: {0}, Property: {1}, Error: {2}",
                              validationErrors.Entry.Entity.GetType().FullName,
                              validationError.PropertyName,
                              validationError.ErrorMessage);
                    }
                }
            }
            
        }

        private void gridcontrolHangSanXuat_Click(object sender, EventArgs e)
        {
            // dừng xử lý nếu không kích vào dòng có dữ liệu
            if (grvHangSanXuat.GetRowCellValue(grvHangSanXuat.FocusedRowHandle, "ID") == null)
                return;

            string id = grvHangSanXuat.GetRowCellValue(grvHangSanXuat.FocusedRowHandle, "ID").ToString();
            HangSanXuat_Id = Convert.ToInt32(id);
            isUpdate = true;
            //MessageBox.Show(id); 
            txtTenHangSanXuat.Text = grvHangSanXuat.GetRowCellValue(grvHangSanXuat.FocusedRowHandle, "TenHangSX").ToString();
        }

        // Thêm số thứ tự tự động tăng GridControl
        //bool indicatorIcon = true;
        private void grvNuocSanXuat_CustomDrawRowIndicator(object sender, DevExpress.XtraGrid.Views.Grid.RowIndicatorCustomDrawEventArgs e)
        {
             GridView view = (GridView)sender;
            if (e.Info.IsRowIndicator && e.RowHandle >=0)
            {
                e.Info.DisplayText = (e.RowHandle+1).ToString();
                //if (!indicatorIcon)
                   // e.Info.ImageIndex = -1;
            }

        }

        private void simpleButton2_Click(object sender, EventArgs e)
        {

        }

        private void btnSua_Click(object sender, EventArgs e)
        {
            if (HangSanXuat_Id > 0)
            {
                layoutControlGroup2.Expanded = true;
                txtTenHangSanXuat.Focus();

            }
            else
            {
                MessageBox.Show("Hãy lựa chọn dòng cần sửa.");
            }
        }

        private void btnThem_Click_1(object sender, EventArgs e)
        {
            layoutControlGroup2.Expanded = true;
            txtTenHangSanXuat.Focus();
            Xoatrang();
            isUpdate = false;
        }
    }
}